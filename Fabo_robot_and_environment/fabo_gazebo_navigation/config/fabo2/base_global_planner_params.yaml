
track_unknown_space: false #true 

shutdown_costmaps: false  #当move_base在不活动状态时,是否关掉costmap.
 
planner_frequency: 0.0 #1.0  #zhjd
planner_patience: 5.0  #在空间清理操作执行前,留给规划器多长时间来找出一条有效规划.

oscillation_timeout: 10.0   #执行修复机制前,允许振荡的时长.
oscillation_distance: 0.4 #0.2 #来回运动在多⼤距离以上不会被认为是振荡


base_global_planner: "global_planner/GlobalPlanner"  #" navfn/NavfnROS  global_planner/GlobalPlanner  voronoi_planner/VoronoiPlanner

VoronoiPlanner:
  publish_voronoi_grid: true
  # weight_data:
  # weight_smooth:
  # smooth_path:

GlobalPlanner:                                  # Also see: http://wiki.ros.org/global_planner
  old_navfn_behavior: false                     # Exactly mirror behavior of navfn, use defaults for other boolean parameters, default false
  use_quadratic: true                           # Use the quadratic approximation of the potential. Otherwise, use a simpler calculation, default true
  use_dijkstra: true                            # Use dijkstra's algorithm. Otherwise, A*, default true
  use_grid_path: false                          # Create a path that follows the grid boundaries. Otherwise, use a gradient descent method, default false
  
  allow_unknown: false #true                           # Allow planner to plan through unknown space, default true
                                                #Needs to have track_unknown_space: true in the obstacle / voxel layer (in costmap_commons_param) to work
                                                ##是否允许规划器规划穿过未知区域的路径,只修改global planner文件中的allow_unknown参数为true还不行,还要在costmap_commons_params.yaml中设置track_unknown_space参数也为true才行
  planner_window_x: 0.0                         # default 0.0
  planner_window_y: 0.0                         # default 0.0
  default_tolerance: 0.3                        # If goal in obstacle, plan to the closest point in radius default_tolerance, default 0.0
  
  publish_scale: 100                            # Scale by which the published potential gets multiplied, default 100
  planner_costmap_publish_frequency: 0.0        # default 0.0
  
  lethal_cost: 253                              # default 253
  neutral_cost: 50                              # default 50
  cost_factor: 3.0                              # Factor to multiply each cost from costmap by, default 3.0
  publish_potential: true                       # Publish Potential Costmap (this is not like the navfn pointcloud2 potential), default true
  visualize_potential: true